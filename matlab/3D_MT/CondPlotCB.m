action = get(gcbo,'Tag');
h0 = get(gcbo,'Parent');
P = get(h0,'UserData');
switch action
case 'Slice -'
  if(P.Np > 1)
    P.Np = P.Np-1;
    set(findobj('Tag','Plot Slice','Parent',h0),'Value',P.Np);
    set(h0,'UserData',P);
    CondReplot
  end
case 'Slice +'
  [Nx,Ny,Nz] = size(P.Cond);
  if(P.Slice == 'X')
     Nmax =  Nx-1;
  elseif(P.Slice == 'Y')
     Nmax =  Ny-1;
  else
     Nmax =  Nz-1;
  end
  if(P.Np < Nmax)
    P.Np = P.Np+1;
    set(findobj('Tag','Plot Slice','Parent',h0),'Value',P.Np);
    set(h0,'UserData',P);
    CondReplot
  end
case 'Plot Slice'
  Np = get(gcbo,'Value');
  P.Np = Np;
  set(h0,'UserData',P);
  CondReplot

case 'X Slice'
  hX = gcbo;
  hP = findobj('Tag','Plot Slice','Parent',h0);
  set(findobj('Tag','Y Slice','Parent',h0),'Value',0);
  set(findobj('Tag','Z Slice','Parent',h0),'Value',0);
  P = get(h0,'UserData');
  [Nx,Ny,Nz] = size(P.Cond);
  Slices = {};
  if P.PlotLatLon
      if ~P.latlon
          avgY = mean(P.Y(P.j1:P.j2));
        [ lat,dummy ] = xy2latlon(P.X,avgY,P.lat0,P.lon0,P.units);
      else
          lat = P.X;
      end
      for k = 1:Nx-1    
          Slices{k} = [ num2str(k) ' : ' num2str(lat(k),'%8.4f') ' degrees'] ;
      end
  else
      for k = 1:Nx-1
          Slices{k} = [ num2str(k) ' : ' num2str(P.X(k),'%8.4e') ' ' P.units] ;
      end
  end
  Np = get(hP,'Value');
  Np = min(Np,Nx-1);
  P.Np = Np;
  set(hP,'Value',Np);
  set(hP,'String',Slices)
  P.Slice = 'X';
  set(h0,'UserData',P)
  temp = squeeze(P.Cond(Np,P.j1:P.j2,P.k1:P.k2)).';
  if P.PlotLatLon && ~P.latlon
    [dummy,X] = xy2latlon(P.X(Np),P.Y(P.j1:P.j2).',P.lat0,P.lon0,P.units);
    xLab = 'Longitude (degrees)';
  else
    X = P.Y(P.j1:P.j2);
    xLab = 'Y';
  end
  Y = P.Z(P.k1:P.k2);
  AxMode = 'ij';
  axes(P.ax)
  pcolor(X,Y,temp);caxis(P.Clims);colormap(P.cmap);
  if ~P.nointerp; shading flat; end
  set(gca,'FontWeight','demi','FontSize',16)
  xlabel(xLab)
  ylabel('Z')
  axis(AxMode)
  h=colorbar;
  cb=colorbar('FontSize',14);
  title(cb,P.cblabel,'FontWeight','demi','FontSize',14);

case 'Y Slice'
  hY = gcbo;
  hP = findobj('Tag','Plot Slice','Parent',h0);
  set(findobj('Tag','X Slice','Parent',h0),'Value',0);
  set(findobj('Tag','Z Slice','Parent',h0),'Value',0);
  P = get(h0,'UserData');
  [Nx,Ny,Nz] = size(P.Cond);
  Slices = {};
  if P.PlotLatLon
      if ~P.latlon
          avgX = mean(P.X(P.i1:P.i2));
          [dummy,lon] = xy2latlon(avgX,P.Y,P.lat0,P.lon0,P.units);
      else
          lon = P.Y;
      end
      for k = 1:Ny-1
          Slices{k} = [ num2str(k) ' : ' num2str(lon(k),'%8.4f') ' degrees'] ;
      end
  else
      for k = 1:Ny-1
          Slices{k} = [ num2str(k) ' : ' num2str(P.Y(k),'%8.4e') ' ' P.units] ;
      end
  end
  Np = get(hP,'Value');
  Np = min(Np,Ny-1);
  P.Np = Np;
  set(hP,'Value',Np);
  set(hP,'String',Slices)
  P.Slice = 'Y';
  set(h0,'UserData',P)
  temp = squeeze(P.Cond(P.i1:P.i2,Np,P.k1:P.k2)).';
  if P.PlotLatLon && ~P.latlon
    [X,dummy] = xy2latlon(P.X(P.i1:P.i2).',P.Y(Np),P.lat0,P.lon0,P.units);
    xLab = 'Latitude (degrees)';
  else
    X = P.X(P.i1:P.i2);
    xLab = 'X';
  end
  Y = P.Z(P.k1:P.k2);
  AxMode = 'ij';
  axes(P.ax)
  pcolor(X,Y,temp);caxis(P.Clims);colormap(P.cmap);
  if ~P.nointerp; shading flat; end
  set(gca,'FontWeight','demi','FontSize',16)
  xlabel(xLab)
  ylabel('Z')
  axis(AxMode)
  cb=colorbar('FontSize',14);
  title(cb,P.cblabel,'FontWeight','demi','FontSize',14);
  
case 'Z Slice'
  hY = gcbo;
  hP = findobj('Tag','Plot Slice','Parent',h0);
  set(findobj('Tag','X Slice','Parent',h0),'Value',0);
  set(findobj('Tag','Y Slice','Parent',h0),'Value',0);
  P = get(h0,'UserData');
  [Nx,Ny,Nz] = size(P.Cond);
  Slices = {}
  for k = 1:Nz-1
     Slices{k} = [ num2str(k) ' : ' num2str(P.Z(k),'%8.4e') ' ' P.units];
  end
  Np = get(hP,'Value');
  Np = min(Np,Nz-1);
  set(hP,'Value',Np);
  P.Np = Np;
  set(hP,'String',Slices)
  P.Slice = 'Z';
  set(h0,'UserData',P)
  if P.PlotLatLon && ~P.latlon
      temp = squeeze(P.Cond(P.i1:P.i2,P.j1:P.j2,Np)).';
      xLab = 'Longitude (degrees)';
      yLab = 'Latitude (degrees)';
      avgX = mean(P.X(P.i1:P.i2));
      avgY = mean(P.Y(P.j1:P.j2));
      [dummy,X] = xy2latlon(avgX,P.Y(P.j1:P.j2),P.lat0,P.lon0,P.units);
      [Y,dummy] = xy2latlon(P.X(P.i1:P.i2),avgY,P.lat0,P.lon0,P.units);
      [Y,X] = meshgrid(Y,X);
      [SiteY,SiteX] = xy2latlon(P.SiteX,P.SiteY,P.lat0,P.lon0,P.units);
  else
      temp = squeeze(P.Cond(P.i1:P.i2,P.j1:P.j2,Np));
      X = P.Y(P.j1:P.j2);
      Y = P.X(P.i1:P.i2);
      xLab = 'Y';
      yLab = 'X';
      SiteY = P.SiteX;
      SiteX = P.SiteY;
  end
  AxMode = 'xy';
  axes(P.ax)
  if P.PlotLatLon
      m_proj(P.proj,...
          'long',[min(X(:,1)) max(X(:,1))],...
          'lat', [min(Y(1,:)) max(Y(1,:))]);
      m_pcolor(X,Y,temp);caxis(P.Clims); colormap(P.cmap);
      if ~P.nointerp; shading flat; end
      cb=colorbar('FontSize',14);
      hold on;
      plotStates
      if P.PlotSites
          m_plot(SiteX,SiteY,'k^','MarkerSize',10,'LineWidth',2)
      end
      m_grid('box','fancy','tickdir','in');
  else
      pcolor(X,Y,temp);caxis(P.Clims);colormap(P.cmap);
      cb=colorbar('FontSize',14);
      if ~P.nointerp; shading flat; end
      hold on
      if P.PlotSites && (P.Slice == 'Z')
          plot(SiteX,SiteY,'k^','MarkerSize',10,'LineWidth',2);
      end
  end
  hold off
  set(gca,'FontWeight','demi','FontSize',16)
  xlabel(xLab)
  ylabel(yLab)
  axis(AxMode)
  title(cb,P.cblabel,'FontWeight','demi','FontSize',14);

case 'Limits'
  hP = gcbo;
  P = get(h0,'UserData');
  [Nx,Ny,Nz] = size(P.Cond);
  hLimits = figure('Position',[800,800,400,300], ...
	'MenuBar','none','NumberTitle','off',...
	'Name','Set Grid Limits and Origin','UserData',h0);
  
  uicontrol('Units','normalized',...
        'FontWeight','demi',...
        'Position',[.2,.84,.3,.1],...
        'String','SHOW GRID LINES',...
        'Tag','No Interp',...
        'Style','radiobutton',...
        'CallBack','CondSetLims',...
        'Value',P.nointerp);
  uicontrol('Units','normalized',...
        'FontWeight','demi',...
        'Position',[.6,.84,.3,.1],...
        'String','FLIP COLOR SCALE',...
        'Tag','Flip Color Scale',...
        'Style','radiobutton',...
        'CallBack','CondSetLims',...
        'Value',P.flipud);
  uicontrol('Units','normalized',...
        'FontWeight','demi',...
        'FontSize',14,...
        'Position',[.1,.72,.5,.1],...
        'String',['X limits : 1-' num2str(Nx-1)],...
        'Tag','X limits',...
        'Style','text')
  uicontrol('Units','normalized',...
        'FontWeight','demi',...
        'Position',[.55,.72,.2,.1],...
        'String',[num2str(P.i1)],...
        'Tag','X limits 1',...
        'Style','edit',...
        'CallBack','CondSetLims')
  uicontrol('Units','normalized',...
        'FontWeight','demi',...
        'Position',[.75,.72,.2,.1],...
        'String',[num2str(P.i2-1)],...
        'Tag','X limits 2',...
        'Style','edit',...
        'CallBack','CondSetLims')
  uicontrol('Units','normalized',...
        'FontWeight','demi',...
        'FontSize',14,...
        'Position',[.1,.60,.5,.1],...
        'String',['Y limits : 1-' num2str(Ny-1)],...
        'Tag','Y limits',...
        'Style','text')
  uicontrol('Units','normalized',...
        'FontWeight','demi',...
        'Position',[.55,.60,.2,.1],...
        'String',[num2str(P.j1)],...
        'Tag','Y limits 1',...
        'Style','edit',...
        'CallBack','CondSetLims')
  uicontrol('Units','normalized',...
        'FontWeight','demi',...
        'Position',[.75,.60,.2,.1],...
        'String',[num2str(P.j2-1)],...
        'Tag','Y limits 2',...
        'Style','edit',...
        'CallBack','CondSetLims')
  uicontrol('Units','normalized',...
        'FontWeight','demi',...
        'FontSize',14,...
        'Position',[.1,.48,.5,.1],...
        'String',['Z limits : 1-' num2str(Nz-1)],...
        'Tag','Z limits',...
        'Style','text')
  uicontrol('Units','normalized',...
        'FontWeight','demi',...
        'Position',[.55,.48,.2,.1],...
        'String',[num2str(P.k1)],...
        'Tag','Z limits 1',...
        'Style','edit',...
        'CallBack','CondSetLims')
  uicontrol('Units','normalized',...
        'FontWeight','demi',...
        'Position',[.75,.48,.2,.1],...
        'String',[num2str(P.k2-1)],...
        'Tag','Z limits 2',...
        'Style','edit',...
        'CallBack','CondSetLims')
  uicontrol('Units','normalized',...
        'FontWeight','demi',...
        'FontSize',14,...
        'Position',[.1,.36,.5,.1],...
        'String','Sigma limits : ',...
        'Tag','Sigma limits',...
        'Style','text')
  uicontrol('Units','normalized',...
        'FontWeight','demi',...
        'Position',[.55,.36,.2,.1],...
        'String',[num2str(P.Clims(1))],...
        'Tag','Sigma limits 1',...
        'Style','edit',...
        'CallBack','CondSetLims')
  uicontrol('Units','normalized',...
        'FontWeight','demi',...
        'Position',[.75,.36,.2,.1],...
        'String',[num2str(P.Clims(2))],...
        'Tag','Sigma limits 2',...
        'Style','edit',...
        'CallBack','CondSetLims')
  uicontrol('Units','normalized',...
        'FontWeight','demi',...
        'Position',[.2,.24,.3,.1],...
        'String','USE LAT & LON',...
        'Tag','Plot Lat Lon',...
        'Style','radiobutton',...
        'CallBack','CondSetLims',...
        'Value',P.PlotLatLon);
  uicontrol('Units','normalized',...
        'FontWeight','demi',...
        'Position',[.55,.24,.2,.1],...
        'String',[num2str(P.lat0)],...
        'Tag','Lat',...
        'Style','edit',...
        'CallBack','CondSetLims')
  uicontrol('Units','normalized',...
        'FontWeight','demi',...
        'Position',[.75,.24,.2,.1],...
        'String',[num2str(P.lon0)],...
        'Tag','Lon',...
        'Style','edit',...
        'CallBack','CondSetLims')
  uicontrol('Units','normalized',...
        'FontWeight','demi',...
        'Position',[.35,.04,.45,.1],...
        'String','OK',...
        'Tag','Limits OK',...
        'Style','pushbutton',...
        'CallBack','CondSetLims')

case 'Data'
  hP = gcbo;
  P = get(h0,'UserData');
  [Nx,Ny,Nz] = size(P.Cond);
  filt = './*.dat; *.res; *.imp';
  [filename, pathname] = uigetfile(filt, 'Load Data File');
  Zfile = [pathname filename];
  if strfind('.imp',Zfile) % make the transition to new file format smooth
    [AllData] = readZ_3D_old(Zfile,'[mV/km]/[nT]');
  else
    [AllData] = readZ_3D(Zfile,'[mV/km]/[nT]');
  end
  [Imp,loc,T,sites,origin,lat,lon] = allData2Imp(AllData,0);
  if P.latlon % already in latlon, so want site locations in latlon
    P.SiteX = lat(:);
    P.SiteY = lon(:);
  elseif strcmp(P.units,'km')
    P.SiteX = loc(1,:)/1000;
    P.SiteY = loc(2,:)/1000;
  else
    P.SiteX = loc(1,:);
    P.SiteY = loc(2,:);
  end
  P.PlotSites = 1;
  if ~isempty(origin)
      P.lat0 = origin(1); 
      P.lon0 = origin(2); 
  end
  set(h0,'UserData',P);
  CondReplot;
  
end
