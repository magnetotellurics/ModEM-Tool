#!/usr/bin/env python
import argparse
import numpy as np

import plotly.express as px
import plotly.graph_objects as go

from PyModEM import ModEMData
from mtpy.modeling import StructuredGrid3D

import argparse

description='Create a 2D Plot of stations on first layer of grid'
parser = argparse.ArgumentParser(description=description)
parser.add_argument('rho_file', help='Filepath to the rho model', type=str)
parser.add_argument('-s', '--save_fname', help='Name of the file to save the plot, if not present show the plot', type=str, default=None)

args = parser.parse_args()

mesh_file = args.rho_file

mesh = StructuredGrid3D()
mesh.from_modem(mesh_file)

rhos = np.log(mesh.res_model[:,:,:])

east = mesh.grid_east
north = mesh.grid_north

fig = go.Figure()

for layer in range(0, rhos.shape[2], 1):
    fig.add_trace(go.Contour(z=rhos[:,:,layer], x=east, y=north,
        contours=dict(start=1, end=7, size=1)))

    fig.update_traces(hoverinfo='z')

fig.data[0].visible = True

steps = []
for layer in range(0, rhos.shape[2], 1):
    step = dict(
        method="update",
        args=[{'visible':[False] * rhos.shape[2]},
              {'title': 'Layer: ' + str(layer)}],
        )

    step["args"][0]["visible"][layer] = True
    steps.append(step)

sliders = [dict(
    active=0,
    currentvalue={"prefix" : "Layer: "},
    pad={"t":0},
    steps=steps
)]

fig.update_layout(
    sliders=sliders
)

fig.show()
